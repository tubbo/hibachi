require 'hibachi'

# Configure global Hibachi settings here, such as the location of the log file
# and Chef JSON file. You my also use the Rails config to manipulate
# these settings, as all configuration data is stored in the
# `Rails.application.config.hibachi` namespace.

Hibachi.configure do |config|
  # Configure whether to run Chef at all during changes. This is best
  # set to `false` in development and test.
  #config.hibachi.run_chef = true

  # Chef Server Connection Settings
  #
  # It's recommended that one does not connect directly to their own
  # Chef Server, but rather a Chef Zero implementation on the same
  # box or a shared Chef Server between multiple installations. The
  # application's configuration should be allowed to be overridden.
  #config.hibachi.chef[:server_url] = '127.0.0.1:5986'
  #config.hibachi.chef[:client_name] = 'hibachi'
  #config.hibachi.chef[:client_key] = '/etc/chef/client.pem'

  # This should probably be changed to the actual FQDN of this node.
  #config.hibachi.node_name = 'your-node-name'

  # Configure where the log file will be kept of all Chef runs, by
  # default it's located in the Rails log dir.
  #config.hibachi.log_path = "#{Rails.root}/log/hibachi.log"

  # If you're using ActiveJob, Hibachi can trigger Chef runs to queue
  # in the background. Just flip this flag to `true` and get
  # backgrounding for free.
  #
  # NOTE: If you set this to `true` and you don't have ActiveJob
  # installed, Hibachi will throw an error whenever you try and run
  # Chef.
  #config.hibachi.run_in_background = false
end
